production:
  # The following is annotated default settings for your Gitorious install. In
  # order for Gitorious to function properly, you _must_ tend to some of these
  # settings. The settings are presented in four groups below; the top group is
  # settings you have to provide, the second group is settings we recommend you
  # review (and change where appropriate). The third group contains settings for
  # tweaking the behavior of Gitorious (system message, public/private mode and
  # so on), while the fourth group contains entirely optional settings that you
  # can freely skip even reading when initially setting up (mostly related to
  # theming and customizing the UI).
  #
  # Note: This configuration file will be split into smaller logically grouped
  # files in future versions of Gitorious.
  #
  # If you want to be able to run Gitorious in development mode (useful when
  # developing new features, or debugging), be sure to copy all the settings
  # to the development group too. Look for the development: label to the bottom
  # of this file.
  #
  # ------------------
  # MANDATORY SETTINGS
  # ------------------
  #
  # Port the ./script/gitorious script should use. This should be the port
  # Gitorious runs under in the given environment. For normal setups, this will
  # be port 80 (in the production environment).
  gitorious_client_port: 80

  # Host the ./script/gitorious script should use. This should be a locally
  # reachable hostname. Note that if you use Apache to serve Gitorious, you
  # have to provide 'localhost' as a ServerAlias in order for the app to be
  # reachable over localhost:80. You may also specify the public hostname
  # here, e.g. gitorious.mycompany.com.
  gitorious_client_host: localhost

  # Host name users use to reach Gitorious, e.g. "gitorious.org".
  gitorious_host: <%= gitorious_host %>

  # The path where git repositories are stored. The actual (bare) repositories
  # reside in #{repository_base_path}/#{project.slug}/#{repository.name}.git/:
  repository_base_path: "/var/lib/git/repositories"

  # Gitorious allows users to download archived tarballs of repositories. In
  # order to do this, it needs a separate directory to do the rough work,
  # and a directory to keep cached tarballs (such that we don't waste time
  # re-generating tarballs on every request).
  #
  # Tarball cache directory. Gitorious uses X-Sendfile to deliver files to
  # users, so this needs to be readable by the web server.
  archive_cache_dir: "/var/lib/git/tarballs"

  #
  # Temporary tarball work directory
  archive_work_dir: "/var/lib/git/tarballs-work"

  # Session key. It is recommended to use a long random string for this. A
  # suitable key can be generated with `apg -m 64`. Make sure you paste the
  # key as one long string, no newlines or escaped characters.
  cookie_secret: <%= cookie_secret %>

  # --------------------
  # RECOMMENDED SETTINGS
  # --------------------
  #
  # In most cases you will want to keep the following settings as is, but we
  # recommend you familiarize yourself with them. If you stray from the common
  # path during setup, you will likely have to change some settings here.

  # Use SSL? Requires web server configuration. Strongly recommended. Forces
  # the use of HTTPS on login page and all pages while user is logged in.
  use_ssl: false

  # The user that runs the poller (and, optionally, the git daemon), and who
  # owns the repositories on disk.
  gitorious_user: git

  # If Gitorious trips on an unrecoverable error, it will send you an email
  # with details if you provide your addresses here.
  exception_notification_emails: <%= gitorious_admin_email %>

  # Messaging queue configuration
  # Gitorious ships with two message queue implementations; Stomp via the
  # ActiveMessaging gem and Resque. A TorqueBox implementation is on its way.
  # Possible values: stomp, resque, test, sync. Default value is stomp. The test
  # implementation is intended for unit testing only, not for production or
  # development use (messages are only stored in a list, never processed). The
  # sync adapter is intended for development use, but may also suit low traffic
  # setups where performance is not critical.
  messaging_adapter: stomp

  # Disable record throttling
  # By default, Gitorious throttles the rate at which users can create
  # database records (repositories, projects, messages..) Users can
  # only create X records within Y timeframe, or they'll get a "hold
  # off for a while" error message after which the offending user has
  # to wait until the Y timeframe has passed to create more records of
  # that type. Disable this only if you trust all your users not to
  # abuse/spam/DDOS your Gitorious instance with repo/msg/project creation.
  disable_record_throttling: false

  # The following properties are all defaults for the stomp adapter
  # Be sure to match thir analogues in broker.yml
  # stomp_server_address: localhost
  # stomp_server_port: 61613
  # stomp_server_login: ~
  # stomp_server_passcode: ~

  # The maximum number of seconds to allow the web server to wait for diffs for
  # a merge request. This is used to prevent huge merge requests from spawning
  # 100 % CPU processes that never die.
  #merge_request_diff_timeout: 10

  # Exposes a public url at /admin/diagnostics/summary which, when
  # called, runs a number of health checks to verify that the
  # Gitorious installation is configured correctly and that the host
  # system seems healthy. Useful for checking that installations go
  # well and for monitoring running installs.
  # (Note: logged in gitorious admin users can also see a visual
  # overview of the system state at /admin/diagnostics/)
  # turn_on_public_diagnostic_summary_page: true

  # --------
  # "TWEAKS"
  # --------

  # When Gitorious is running in public mode (true), everyone with access to the
  # server can view and clone repositories. Private mode (false) will not allow
  # anonymous access to content or user registration. Only pre-approved and
  # logged in users can surf the Gitorious installation.
  #
  # NB! If you intend to run in private mode, you should probably also disable
  # HTTP and git:// cloning. These protocols are anonymous, and will allow
  # unregistered users to pull repositories, given that they somehow obtained
  # the correct URLs.
  #public_mode: true

  # Enabling private repositories allows users to control read-access to their
  # repositories. Repositories are public by default, but individual users
  # and/or groups can be given read permissions to limit who can see and pull
  # from individual repositories and/or projects.
  # More information is available in the Gitorious Wiki:
  # https://gitorious.org/gitorious/pages/PrivateRepositories
  enable_private_repositories: true

  # Only site admins can create projects.
  #only_site_admins_can_create_projects: false

  # System message that will appear on all pages if present
  #system_message:

  # Define your locale. See config/locales/ for supported locales.
  locale: <%= locale %>

  # Hides http:// clone URLs from repository boxes when set to true.
  #hide_http_clone_urls: false

  # Hides git:// clone URLs from repository boxes when set to true.
  # Set to true if you don't intend to run a git-daemon.
  #hide_git_clone_urls: false

  # Always display SSH URLs, regardless of push access? This setting should be
  # true if you have disabled both HTTP and git:// cloning (typically when
  # Gitorious is running in private mode). Setting this to true will always
  # display the ssh URLs for a repository, even if the current user does not
  # have access to push to it. ssh always allows cloning for users that have
  # uploaded their public key.
  #always_display_ssh_url: false

  # Is this gitorious.org? Read: should we have a very flashy homepage?
  is_gitorious_dot_org: false

  # Configure which address to use as From when sending email
  sender_email_address: "Gitorious <<%= gitorious_admin_email %>>"

  # Mangle visible e-mail addresses (spam protection)
  mangle_email_addresses: false

  # Available project licenses. This can be configured as an array of licenses:
  #
  # licenses:
  #   - BSD
  #   - GPL
  #   - LGPL
  #   - MIT
  #
  # Alternately, you can configure licenses as an array of hashes, where each
  # hash consists of name -> description pairs. The descriptions will be shown
  # in the project creation UI (/projects/new).
  #
  # licenses:
  #   - MIT: No guarantees, no strings attached
  #   - BSD: Keep the copyright
  #
  # For multi-line descriptions, use the YAML escape pipe:
  #
  # licenses:
  #   - MIT: |
  #     <ul>
  #       <li>Liberal license</li>
  #     </ul>
  #   - BSD: Keep the copyright
  #
  # Default licenses are:
  #
  # licenses:
  #   - Academic Free License v3.0",
  #   - MIT License
  #   - BSD License
  #   - Ruby License
  #   - GNU General Public License version 2 (GPLv2)
  #   - GNU General Public License version 3 (GPLv3)
  #   - GNU Lesser General Public License (LGPL)
  #   - GNU Affero General Public License (AGPLv3)
  #   - Mozilla Public License 1.0 (MPL)
  #   - Mozilla Public License 1.1 (MPL 1.1)
  #   - Qt Public License (QPL)
  #   - Python License
  #   - zlib/libpng License
  #   - Apache License
  #   - Apple Public Source License
  #   - Perl Artistic License
  #   - Microsoft Permissive License (Ms-PL)
  #   - ISC License
  #   - Lisp Lesser License
  #   - Boost Software License
  #   - Public Domain
  #   - Other Open Source Initiative Approved License
  #   - Other/Proprietary License
  #   - Other/Multiple
  #   - None
  #

  # Pick a default license
  default_license: <%= default_license %>

  # ----------------
  # THEMING SETTINGS
  # ----------------

  # Stuff that's in the html <head>. custom stats javascript code etc
  #extra_html_head_data:

  # Email address to the support for the Gitorious server
  gitorious_support_email: <%= gitorious_admin_email %>

  # The SSH fingerprint of your server
  ssh_fingerprint: "<%= ssh_fingerprint %>"

  # An array of two-element arrays to be rendered along the normal links in the
  # footer on the site The first element is the link text, the next is the URL
  #additional_footer_links:
  #  - - Professional Gitorious Services
  #    - http://gitorious.com/

  # Set to true if you want to render terms of service and privacy policy links
  # in the footer.
  #terms_of_use: false

  # Actual URLs to terms of service and privacy policy pages. Note that the
  # defaults point to gitorious.org's policies. If you want to provide your own,
  # add app/views/site/tos.html.erb and then provide /about/tos as the URL. For
  # information on how to format the template, take a look at
  # app/views/site/about.html.erb
  #terms_of_service_url: http://en.gitorious.org/tos
  #privacy_policy_url: http://en.gitorious.org/privacy_policy

  # The following settings are useful if you're interested in theming your
  # Gitorious install. Please note however, that we don't give any API
  # guarantees for view code, controllers or CSS. In fact, we plan to ditch most
  # of the existing CSS and JavaScript and replace it with a more modular system
  # (and significantly improved) markup sometime soon-ish, so use
  # "themes"/overrides at your own risk. In particular, we will not include
  # relevant theme information in the Changelog, so you will need to refer to
  # the git log if updating gives you trouble.

  # Site name. Default is "Gitorious"
  #site_name: Gitorious

  # Additional stylesheets for most pages. "Most pages" is everything except for
  # the frontpage/public index, login page and the register page.
  #
  # One way to theme Gitorious would be to put a submodule in public/ that
  # contains stylesheets and images. Then include the following setting
  # (assuming that your submodule is at public/mytheme, and includes a directory
  # stylesheets/theme.css):
  #common_stylesheets: /mytheme/stylesheets/theme
  #
  # If you have several files:
  #common_stylesheets:
  #  - /mytheme/stylesheets/theme
  #  - /mytheme/stylesheets/theme2
  #
  # Note that the extra stylesheets will be added to the bundle used in
  # production

  # Additional stylesheets for the frontpage and login pages. Works like the
  # common_stylesheets setting
  #external_stylesheets: /mytheme/stylesheets/themed-public-index

  # Use your own favicon
  #favicon_url: http://www.mysite.com/favicon.ico

  # Logo image. If this setting is not provided, the default Gitorious logo will
  # be used. If you provide the setting, but no value, no logo image will be
  # rendered, only the text "Gitorious" (may be useful if you want to provide a
  # logo via CSS). If you provide a URL, it will be assumed to be an image and
  # included as an img tag.
  #logo_url:

  # Add more view paths if you want to override some or all of Gitorious'
  # views. Make sure you know what you're doing before attepting this - there is
  # no API guarantee from the current controllers. If you override views, study
  # the git log (the Changelog may not mention these changes) before upgrading.
  #additional_view_paths: vendor/plugin/mysite/views
  #
  # This allows you to e.g. provide your own frontpage template by saving the
  # file:
  # vendor/plugin/mysite/views/site/public_index.html.erb
  #
  # (Note that this particular template requires is_gitorious_dot_org:
  # true). Refer to app/views/site/public_index.html.erb for how to customize.

  # If your site uses other mechanisms for authentication than the built-in
  # enter a label to display next to the username field in Gitorious
  # custom_username_label: Username

development:

test:
  # Unless you are developing Gitorious and really know what you are doing,
  # leave the following settings as is.
  repository_base_path: "/tmp/git/repositories"
  archive_cache_dir: "/tmp/git/tarball-cache"
  archive_work_dir: "/tmp/git/tarball-work"
  gitorious_host: gitorious.test
  gitorious_client_host: gitorious.test
  gitorious_client_port: 3000
  cookie_secret: UpDoquajrecJewyeodMilmiasFicsOke
  use_ssl: true
  messaging_adapter: test
  disable_record_throttling: false
